{"version":3,"sources":["components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","findPerson","useCallback","personName","find","persons","useMemo","map","father","fatherName","undefined","mother","motherName","selectedPerson","useMatch","params","born","died","PeoplePage","useState","setPeople","errorLoading","setErrorLoading","isLoading","setIsLoading","fetchpeople","fetchedData","useEffect","length","NotFoundPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d23e5e86.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            classNames(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const findPerson = useCallback((personName: string) => {\n    return people.find(person => person.name === personName);\n  }, [people]);\n\n  const persons = useMemo(() => {\n    return people.map(person => {\n      const father = person.fatherName\n        ? findPerson(person.fatherName)\n        : undefined;\n\n      const mother = person.motherName\n        ? findPerson(person.motherName)\n        : undefined;\n\n      return {\n        ...person,\n        father,\n        mother,\n      };\n    });\n  }, [people]);\n\n  const selectedPerson = useMatch('/people/:slug')?.params.slug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map((person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': selectedPerson === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n              />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                (person.mother\n                  ? (\n                    <PersonLink\n                      person={person.mother}\n                    />\n                  )\n                  : person.motherName || '-'\n                )\n              }\n            </td>\n\n            <td>\n              {\n                (person.father\n                  ? (\n                    <PersonLink\n                      person={person.father}\n                    />\n                  )\n                  : person.fatherName || '-'\n                )\n              }\n            </td>\n          </tr>\n        ))}\n\n        {false && (\n          <>\n            <tr data-cy=\"person\">\n              <td>\n                <a href=\"#/people/philibert-haverbeke-1907\">\n                  Philibert Haverbeke\n                </a>\n              </td>\n\n              <td>m</td>\n              <td>1907</td>\n              <td>1997</td>\n\n              <td>\n                <a\n                  className=\"has-text-danger\"\n                  href=\"#/people/emma-de-milliano-1876\"\n                >\n                  Emma de Milliano\n                </a>\n              </td>\n\n              <td>\n                <a href=\"#/people/emile-haverbeke-1877\">\n                  Emile Haverbeke\n                </a>\n              </td>\n            </tr>\n\n            <tr data-cy=\"person\" className=\"has-background-warning\">\n              <td>\n                <a href=\"#/people/jan-frans-van-brussel-1761\">\n                  Jan Frans van Brussel\n                </a>\n              </td>\n\n              <td>m</td>\n              <td>1761</td>\n              <td>1833</td>\n              <td>-</td>\n\n              <td>\n                <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n                  Jacobus Bernardus van Brussel\n                </a>\n              </td>\n            </tr>\n\n            <tr data-cy=\"person\">\n              <td>\n                <a\n                  className=\"has-text-danger\"\n                  href=\"#/people/lievijne-jans-1542\"\n                >\n                  Lievijne Jans\n                </a>\n              </td>\n\n              <td>f</td>\n              <td>1542</td>\n              <td>1582</td>\n              <td>-</td>\n              <td>-</td>\n            </tr>\n\n            <tr data-cy=\"person\">\n              <td>\n                <a href=\"#/people/bernardus-de-causmaecker-1721\">\n                  Bernardus de Causmaecker\n                </a>\n              </td>\n\n              <td>m</td>\n              <td>1721</td>\n              <td>1789</td>\n\n              <td>\n                <a\n                  className=\"has-text-danger\"\n                  href=\"#/people/livina-haverbeke-1692\"\n                >\n                  Livina Haverbeke\n                </a>\n              </td>\n\n              <td>\n                <a href=\"#/people/lieven-de-causmaecker-1696\">\n                  Lieven de Causmaecker\n                </a>\n              </td>\n            </tr>\n          </>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorLoading, setErrorLoading] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchpeople = useCallback(async () => {\n    setIsLoading(true);\n    setErrorLoading(false);\n    try {\n      // fetching data\n      const fetchedData = await getPeople();\n      // setting data to people\n\n      setPeople(fetchedData);\n    } catch (error) {\n      // error\n      setErrorLoading(true);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchpeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {errorLoading && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {people.length === 0 && !errorLoading && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {people.length > 0 && (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n\n          <Route\n            path=\"/people/:slug\"\n            element={<PeoplePage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}